{"version":3,"sources":["common/Colors.tsx","components/ui/Header.tsx","pages/Main.tsx","utils/config.ts","api/auth.ts","api/apiClient.ts","api/userApi.ts","pages/Signup.tsx","modals/ModalBackground.tsx","modals/InstallExtensionModal.tsx","components/ui/Sidebar.tsx","components/ui/NavBar.tsx","components/layouts/Dashboard.tsx","api/linkApi.ts","pages/Links.tsx","pages/AccountSettings.tsx","pages/FriendsList.tsx","pages/Login.tsx","components/routes/PublicRoute.tsx","components/routes/PrivateRoute.tsx","pages/AppRouter.tsx","serviceWorker.ts","index.tsx"],"names":["Colors","NavBar","styled","div","Logo","PigeonName","Header","props","to","style","color","Container","blue","IntroContainer","Content","LandingTextContainer","LandingGraphic","img","DescriptionContainer","DescriptionTextContainer","DescriptionGraphic","BodyContainer","green","UseCaseContainer","ModuleContainer","ModuleBox","ModuleImage","Paragraph","h2","H3","h3","H1","h1","Title","InputField","input","FooterContainer","pink","Main","mobile","useMediaQuery","query","useState","pushURL","setPushURL","margin","textAlign","type","name","placeholder","onChange","event","target","value","className","src","marginTop","ENDPOINT","process","auth","accessToken","loginSubscribers","logoutSubscribers","subscriber","this","push","localStorage","getItem","refreshToken","setItem","removeItem","email","password","login","then","data","localLogin","forEach","loggedIn","catch","error","message","localLogout","isAlreadyFetchingAccessToken","subscribers","secureAxios","axios","create","baseURL","errorResponse","a","getRefreshToken","Promise","reject","Error","retryOriginalRequest","resolve","addSubscriber","config","headers","Authorization","method","url","timeout","JSON","stringify","response","newAccessToken","setAccessToken","onAccessTokenFetched","getAccessToken","logout","callback","interceptors","use","status","isTokenExpiredError","refreshTokenAndReattemptRequest","res","err","Headline","Background","ButtonContainer","FormContainer","ErrorText","p","Signup","emailQuery","URLSearchParams","useLocation","search","get","history","useHistory","initialValues","confirm","validate","values","errors","test","onSubmit","setSubmitting","firstName","lastName","signup","split","slice","join","alert","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onBlur","onClick","e","ModalBackground","children","Desc","CloseButton","InstallExtensionModal","show","setShow","backgroundColor","SidebarContainer","SidebarOption","SidebarLabel","Icon","options","title","path","icon","Sidebar","map","option","key","href","NavBarContainer","LogoText","SettingsIcon","MenuContainer","Menu","MenuItem","showMenu","setShowMenu","ContentContainer","User","installExtensionOpen","fetchMe","me","fetchMetadata","link","previewUrl","meta","Body","LinkContainer","MetaImage","MetaDesc","placeholderLinks","Links","useEffect","setRenderModal","accessTokenData","parse","getUserID","API","parseMetadata","previewData","result","setMetadata","setFetching","retrieveMetadata","userID","id","console","log","links","setLinks","errMessage","renderModal","metadata","fetching","Dashboard","marginBottom","window","open","description","AccountSettings","ListContainer","ColumnContainer","FriendsListContainer","FriendName","RequestContainer","OptionsContainer","Option","AddContainer","AddTitle","Friends","setFriends","friend","request","marginLeft","paddingRight","resetForm","Login","addLoginSubscribers","PublicRoute","isAuthenticated","exact","component","PrivateRoute","AppRouter","FriendsList","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e337b97a.chunk.js","sourcesContent":["enum Colors {\n  pink = '#ffa3a3',\n  blue = '#91ccec',\n  green = '#98D3B5',\n}\n\nexport default Colors;\n","/** @format */\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = styled.div`\n  max-width: 80%;\n  padding-top: 34px;\n  padding-bottom: 20px;\n  margin: auto;\n  display: flex;\n`;\n\nconst Logo = styled.div`\n  font-size: 30px;\n  cursor: pointer;\n`;\n\nconst PigeonName = styled.div`\n  font-size: 30px;\n  margin-left: 10px;\n  font-family: 'Avenir';\n  font-weight: 500;\n  color: white;\n`;\n\ninterface Props {\n  color?: string;\n}\n\nconst Header: React.FC<Props> = (props) => {\n  return (\n    <NavBar>\n      <Link to=\"/\">\n        <Logo>🐦</Logo>\n      </Link>\n      <PigeonName\n        style={{\n          color: props.color,\n        }}\n      >\n        Pigeon\n      </PigeonName>\n    </NavBar>\n  );\n};\n\nexport default Header;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport Header from '../components/ui/Header';\n\n// TODO: Fix mobile view\n\nconst Container = styled.div`\n  min-height: 100%;\n  bottom: 0;\n  right: 0;\n  min-width: 100%;\n  background-color: ${Colors.blue};\n`;\n\nconst IntroContainer = styled.div`\n  display: flex;\n  height: 90vh;\n  max-width: 80%;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nconst Content = styled.div`\n  margin-top: 2vh;\n  width: 100%;\n  height: 80%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst LandingTextContainer = styled.div`\n  display: block;\n  width: 45%;\n  max-width: 0;\n  min-width: 45%;\n  margin-bottom: 0;\n  padding-right: 0;\n  color: white;\n  font-family: 'Avenir';\n`;\n\nconst LandingGraphic = styled.img`\n  display: flex;\n  margin-top: 5vh;\n  max-width: 40%;\n  min-width: 40%;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DescriptionContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  padding: 10% 10% 15% 10%;\n`;\n\nconst DescriptionTextContainer = styled.div`\n  display: block;\n  width: 60%;\n  max-width: 0;\n  min-width: 50%;\n  margin-bottom: 0;\n  padding-right: 0;\n  color: white;\n  padding-left: 5%;\n  font-family: 'Avenir';\n`;\n\nconst DescriptionGraphic = styled.img`\n  height: 30%;\n  width: 30%;\n`;\n\nconst BodyContainer = styled.div`\n  padding-top: 3%;\n  background-color: ${Colors.green};\n`;\n\nconst UseCaseContainer = styled.div``;\n\nconst ModuleContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 3% 0%;\n  min-width: 800px;\n  max-width: 65vw;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nconst ModuleBox = styled.div`\n  background: white;\n  border-radius: 20px;\n  box-shadow: 0px 7px 5px #aaaaaa;\n\n  flex: 0 0 auto;\n  margin: 0px;\n  min-width: 220px;\n  min-height: 300px;\n  width: 25%;\n  height: 20vw;\n  padding: 30px 5px 10px 5px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ModuleImage = styled.img`\n  text-align: center;\n  max-width: 65%;\n  max-height: 65%;\n  object-fit: cover;\n`;\n\nconst Paragraph = styled.h2`\n  font-size: 17px;\n  color: dimgray;\n  text-align: center;\n  padding-top: 5px;\n  padding-right: 20px;\n  padding-left: 20px;\n  font-family: 'Avenir';\n  font-style: normal;\n  font-weight: 400;\n  display: block;\n`;\n\nconst H3 = styled.h3`\n  font-size: 17px;\n  color: dimgray;\n  text-align: left;\n  padding-left: 2px;\n  font-family: 'Avenir';\n  font-style: normal;\n  font-weight: 500;\n  display: block;\n`;\n\nconst H1 = styled.h1`\n  font-size: 50px;\n  margin-bottom: 40px;\n  align-items: center;\n  color: white;\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n  color: white;\n`;\n\nconst InputField = styled.input`\n  width: 200px;\n  color: black;\n  background-color: #f5f6f8;\n  padding: 7px 16px;\n  font-family: 'Avenir';\n  font-weight: 400;\n  font-size: 14px;\n  border: 3px solid #f5f6f8;\n  margin: auto;\n  margin-bottom: 20px;\n  margin-right: 10px;\n\n  &::placeholder {\n    color: rgba(0, 0, 0, 0.4);\n  }\n\n  &:focus {\n    outline: none;\n    background: white;\n    border: 3px solid #ff8686;\n    color: black;\n  }\n`;\n\nconst FooterContainer = styled.div`\n  left: 0;\n  bottom: 0;\n  height: 50px;\n  width: 100%;\n  background-color: ${Colors.pink};\n  color: white;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst Main = () => {\n  const mobile = useMediaQuery({ query: '(max-width: 786px)' });\n  const [pushURL, setPushURL] = useState('/signup');\n\n  const handleChange = (event: any) => {\n    setPushURL('/signup?email=' + event.target.value);\n  };\n\n  if (mobile) {\n    return (\n      <h1 style={{ margin: '20px auto 0 auto', textAlign: 'center' }}>\n        Our landing page is currently only available on Desktop.\n      </h1>\n    );\n  }\n\n  return (\n    <Container>\n      <Header color={'${Colors.blue}'} />\n      <IntroContainer>\n        <Content>\n          <LandingTextContainer>\n            <H1>Spark quality conversations by sharing links.</H1>\n            <InputField\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n            />\n            <Link to={pushURL}>\n              <button className=\"button is-info\">Get Started</button>\n            </Link>\n          </LandingTextContainer>\n          <LandingGraphic src=\"/images/social_sharing.svg\" />\n        </Content>\n      </IntroContainer>\n      <BodyContainer>\n        <UseCaseContainer>\n          <Title style={{ textAlign: 'center' }}>\n            Pigeon is designed to help you when\n          </Title>\n          <ModuleContainer>\n            <ModuleBox>\n              <ModuleImage src=\"/images/hangout.png\" />\n              <Paragraph style={{ marginTop: '50px' }}>\n                You're scrambling to share a Google Doc link on Zoom\n              </Paragraph>\n            </ModuleBox>\n\n            <ModuleBox>\n              <ModuleImage src=\"/images/question.png\" />\n              <Paragraph style={{ marginTop: '50px' }}>\n                You lost an important link that your friend shared with you\n              </Paragraph>\n            </ModuleBox>\n\n            <ModuleBox>\n              <ModuleImage src=\"/images/friends.png\" />\n              <Paragraph style={{ marginTop: '50px' }}>\n                You want to check out what's trending among your friends\n              </Paragraph>\n            </ModuleBox>\n          </ModuleContainer>\n        </UseCaseContainer>\n        <DescriptionContainer>\n          <DescriptionGraphic src=\"/images/linked.svg\" />\n          <DescriptionTextContainer>\n            <Title>What is Pigeon?</Title>\n            <H3>\n              Pigeon is the fastest way to share links with friends. We make\n              link-sharing social by helping to organize and keep track of links\n              you send to friends!\n            </H3>\n            <Title>How does Pigeon work?</Title>\n            <H3>\n              When you sign up for Pigeon, you can add your friends and tell us\n              how you want to contact them. Whenever you want to send a link,\n              just hit Cmd+E to activate our extension! We make it easy to\n              search your contacts and send links quickly.\n            </H3>\n            <Title>How do I use Pigeon?</Title>\n            <H3>\n              Sign up to join our early access program above! Our extension will\n              soon be available on the chrome webstore.\n            </H3>\n          </DescriptionTextContainer>\n        </DescriptionContainer>\n      </BodyContainer>\n      <FooterContainer>\n        <h1 className=\"has-text-whtie-light\">\n          Made with ❤️ at Zoom University\n        </h1>\n      </FooterContainer>\n    </Container>\n  );\n};\n\nexport default Main;\n","const ENDPOINT = process.env.REACT_APP_API_URL || '';\n\nexport { ENDPOINT };\n","/** @format */\n\nimport { login } from './userApi';\n\ninterface LoginParams {\n  email: string;\n  password: string;\n}\n\ninterface LoginResponse {\n  accessToken: string;\n  refreshToken: string;\n  success: boolean;\n}\n\ntype AuthCallBack = ({\n  loggedIn,\n  error,\n}: {\n  loggedIn: boolean;\n  error?: string;\n}) => void;\n\nclass Auth {\n  accessToken: string = '';\n\n  loginSubscribers: AuthCallBack[] = [];\n  logoutSubscribers: AuthCallBack[] = [];\n\n  addLoginSubscribers(subscriber: AuthCallBack) {\n    this.loginSubscribers.push(subscriber);\n  }\n\n  addLogoutSubscribers(subscriber: AuthCallBack) {\n    this.logoutSubscribers.push(subscriber);\n  }\n\n  setAccessToken(accessToken: string) {\n    this.accessToken = accessToken;\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem('authRefreshToken');\n  }\n\n  localLogin(accessToken: string, refreshToken: string) {\n    this.accessToken = accessToken;\n    localStorage.setItem('authRefreshToken', refreshToken);\n  }\n\n  localLogout() {\n    this.accessToken = '';\n    localStorage.removeItem('authRefreshToken');\n  }\n\n  login({ email, password }: LoginParams) {\n    // retrieve jwt from server\n    login({ email, password })\n      .then((data) => {\n        const { accessToken, refreshToken } = data as LoginResponse;\n        this.localLogin(accessToken, refreshToken);\n\n        this.loginSubscribers.forEach((subscriber) => {\n          subscriber({ loggedIn: true });\n        });\n      })\n      .catch((error: Error) => {\n        this.loginSubscribers.forEach((subscriber) => {\n          subscriber({ loggedIn: false, error: error.message });\n        });\n      });\n  }\n\n  logout() {\n    this.localLogout();\n    this.logoutSubscribers.forEach((subscriber) => {\n      subscriber({ loggedIn: false });\n    });\n  }\n\n  isAuthenticated() {\n    return localStorage.getItem('authRefreshToken') ? true : false;\n  }\n}\n\nconst auth = new Auth();\n\nexport default auth;\n","/** @format */\n\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nimport { ENDPOINT } from '../utils/config';\nimport auth from './auth';\n\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers: ((accessToken: string) => void)[] = [];\n\nconst secureAxios = axios.create({\n  baseURL: ENDPOINT,\n});\n\nsecureAxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error: AxiosError) {\n    const errorResponse = error.response;\n\n    if (errorResponse && isTokenExpiredError(errorResponse)) {\n      return refreshTokenAndReattemptRequest(errorResponse);\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nfunction isTokenExpiredError(error: AxiosResponse) {\n  return error.status === 401;\n}\n\nasync function refreshTokenAndReattemptRequest(\n  errorResponse: AxiosResponse<any>\n) {\n  try {\n    const refreshToken = auth.getRefreshToken();\n    if (!refreshToken) {\n      return Promise.reject(new Error('Invalid refresh token'));\n    }\n\n    const retryOriginalRequest = new Promise((resolve) => {\n      addSubscriber((accessToken: string) => {\n        errorResponse!.config.headers.Authorization = `Bearer ${accessToken}`;\n        resolve(axios(errorResponse!.config));\n      });\n    });\n\n    if (!isAlreadyFetchingAccessToken) {\n      isAlreadyFetchingAccessToken = true;\n      const response = await axios({\n        method: 'POST',\n        url: `${ENDPOINT}/api/users/refreshToken`,\n        timeout: 0,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        data: JSON.stringify({ refreshToken }),\n      });\n\n      if (!response.data) {\n        return Promise.reject(new Error('Failed to fetch refresh token'));\n      }\n      const newAccessToken = response.data.accessToken;\n      auth.setAccessToken(newAccessToken);\n\n      isAlreadyFetchingAccessToken = false;\n      onAccessTokenFetched(auth.getAccessToken());\n    }\n    return retryOriginalRequest;\n  } catch (err) {\n    auth.logout();\n    return Promise.reject(err);\n  }\n}\n\nfunction onAccessTokenFetched(accessToken: string) {\n  subscribers.forEach((callback) => callback(accessToken));\n  subscribers = [];\n}\n\nfunction addSubscriber(callback: (accessToken: string) => void) {\n  subscribers.push(callback);\n}\n\nexport default secureAxios;\n","/** @format */\n\nimport secureAxios from './apiClient';\n\ninterface UserSignup {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\ninterface UserLogin {\n  email: string;\n  password: string;\n}\n\nconst signup = ({ firstName, lastName, email, password }: UserSignup) => {\n  return new Promise((resolve, reject) => {\n    secureAxios({\n      url: '/api/users/signup',\n      method: 'POST',\n      timeout: 0,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password,\n      }),\n    })\n      .then(() => resolve())\n      .catch((err: Error) => reject(err));\n  });\n};\n\nconst login = ({ email, password }: UserLogin) => {\n  return new Promise((resolve, reject) => {\n    secureAxios({\n      url: '/api/users/login',\n      method: 'POST',\n      timeout: 0,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err: Error) => reject(err));\n  });\n};\n\nconst fetchMe = (key: string, { accessToken }: { accessToken: string }) => {\n  return new Promise((resolve, reject) => {\n    secureAxios({\n      url: '/api/users/me',\n      method: 'GET',\n      timeout: 0,\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err: Error) => reject(err));\n  });\n};\n\nexport { signup, login, fetchMe };\n","/** @format */\n\nimport { Formik } from 'formik';\nimport * as React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport Header from '../components/ui/Header';\nimport { signup } from '../api/userApi';\n\n// TICKETS: Add loading animation to button. Validate email on landing page?\n\ninterface FormValues {\n  email: string;\n  name: string;\n  password: string;\n  confirm: string;\n}\n\nconst Headline = styled.h1`\n  padding-top: 7%;\n  font-family: 'Avenir';\n  font-size: 33px;\n  text-align: center;\n  color: white;\n  margin-block-end: 0em;\n`;\n\nconst Background = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  min-width: 100%;\n  min-height: 100%;\n  opacity: 100%;\n  background-color: ${Colors.pink};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst InputField = styled.input`\n  width: 200px;\n  border-radius: 12px;\n  color: black;\n  background-color: #f5f6f8;\n  padding: 8px 16px;\n  font-family: 'Avenir';\n  font-weight: 400;\n  font-size: 14px;\n  border: 3px solid #f5f6f8;\n  margin: auto;\n  margin-top: 20px;\n\n  &::placeholder {\n    color: rgba(0, 0, 0, 0.4);\n  }\n\n  &:focus {\n    outline: none;\n    background: white;\n    border: 3px solid #ddd;\n    color: black;\n  }\n`;\n\nconst ErrorText = styled.p`\n  font-family: 'Avenir';\n  font-weight: 500;\n  font-size: 14px;\n  color: #8b0000;\n  margin: 5px auto 0 auto;\n`;\n\nconst Signup = () => {\n  const params = new URLSearchParams(useLocation().search);\n  const emailQuery = params.get('email');\n  const history = useHistory();\n\n  const initialValues: FormValues = {\n    email: emailQuery || '',\n    name: '',\n    password: '',\n    confirm: '',\n  };\n\n  const validateSignUp = (values: FormValues) => {\n    const errors = {} as any;\n    if (!values.email) {\n      errors.email = 'Email address required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!values.name) {\n      errors.name = 'Name is required';\n    }\n\n    if (!values.password) {\n      errors.password = 'Password is required';\n    }\n\n    if (values.confirm !== values.password) {\n      errors.confirm = \"Passwords don't match\";\n    }\n    return errors;\n  };\n\n  const handleSubmit = (\n    values: FormValues,\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n  ) => {\n    const requiredValues = {\n      email: values.email,\n      firstName: values.name.split(' ').slice(0, -1).join(' '),\n      lastName: values.name.split(' ').slice(-1).join(' '),\n      password: values.password,\n    };\n\n    signup(requiredValues)\n      .then(() => {\n        alert('Sign up success!');\n        history.push('/login');\n      })\n      .catch(() => alert('Oops... Something went wrong.'));\n\n    setSubmitting(false);\n  };\n\n  return (\n    <Background>\n      <Header color={'white'} />\n      <>\n        <Headline>Pigeon Sign Up</Headline>\n        <Formik\n          initialValues={initialValues}\n          validate={validateSignUp}\n          onSubmit={handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }: /* and other goodies */\n          {\n            values: any;\n            errors: any;\n            touched: any;\n            handleChange: {\n              (e: React.ChangeEvent<any>): void;\n            };\n            handleBlur: {\n              (e: React.ChangeEvent<any>): void;\n            };\n            handleSubmit: {\n              (e: React.ChangeEvent<any>): void;\n            };\n            isSubmitting: boolean;\n          }) => (\n            <>\n              <FormContainer onSubmit={handleSubmit}>\n                <InputField\n                  type=\"text\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"janedoe@gmail.com\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.email && touched.email && (\n                  <ErrorText>{errors.email}</ErrorText>\n                )}\n                <InputField\n                  type=\"text\"\n                  name=\"name\"\n                  value={values.name}\n                  placeholder=\"Jane Doe\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.name && touched.name && (\n                  <ErrorText>{errors.name}</ErrorText>\n                )}\n                <InputField\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.password && touched.password && (\n                  <ErrorText>{errors.password}</ErrorText>\n                )}\n                <InputField\n                  type=\"password\"\n                  name=\"confirm\"\n                  value={values.confirm}\n                  placeholder=\"Confirm Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.confirm && touched.confirm && (\n                  <ErrorText>{errors.confirm}</ErrorText>\n                )}\n                <ButtonContainer>\n                  <button\n                    type=\"submit\"\n                    className=\"button is-info\"\n                    style={{ margin: '15px auto 0 auto' }}\n                    onClick={(e) => {\n                      handleSubmit(e);\n                    }}\n                  >\n                    Get Started\n                  </button>\n                </ButtonContainer>\n              </FormContainer>\n            </>\n          )}\n        </Formik>\n      </>\n    </Background>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  left: 0px;\n  z-index: 1000;\n  background-color: rgba(2, 2, 2, 0.2);\n`;\n\nexport const ModalBackground = (props: { children: React.ReactNode }) => {\n  return <Container>{props.children}</Container>;\n};\n\nexport default ModalBackground;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport ModalBackground from './ModalBackground';\n\nconst Content = styled.div`\n  width: 300px;\n  height: 50%;\n  background-color: white;\n  position: relative;\n  margin: auto;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 10px;\n  text-align: center;\n`;\n\nconst Header = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  justify-content: flex-end;\n  margin: auto;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Desc = styled.p`\n  text-align: center;\n  margin: 0 20px 0 20px;\n`;\n\nconst CloseButton = styled.img`\n  cursor: pointer;\n`;\n\n// TODO: Need to add a cool graphic here\n\nconst InstallExtensionModal = () => {\n  const [show, setShow] = useState(true);\n  return (\n    <>\n      {show && (\n        <ModalBackground>\n          <Content>\n            <Header>\n              <CloseButton\n                src=\"/images/close_button.svg\"\n                onClick={() => {\n                  setShow(false);\n                }}\n              />\n            </Header>\n            <Title>Add Pigeon to your browser</Title>\n            <Desc>\n              Our chrome extension is central to your Pigeon experience,\n              allowing you to share links with friends and family as fast as\n              possible.{' '}\n            </Desc>\n            <button\n              type=\"submit\"\n              className=\"ui primary button\"\n              style={{\n                backgroundColor: Colors.pink,\n                marginTop: '20px',\n              }}\n              onClick={() => {\n                alert('Link to Chrome web store');\n              }}\n            >\n              Install the Pigeon Chrome Extension\n            </button>\n          </Content>\n        </ModalBackground>\n      )}\n    </>\n  );\n};\n\nexport default InstallExtensionModal;\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Colors from '../../common/Colors';\nimport InstallExtensionModal from '../../modals/InstallExtensionModal';\n\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 25px 0px;\n  max-width: 200px;\n  width: 100%;\n  min-height: 100vh;\n  border-right: 1px solid rgba(72, 72, 72, 0.2);\n  margin-left: 2.5rem;\n`;\n\n// TODO: Add selected button styling\n\nconst SidebarOption = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  cursor: pointer;\n  width: 90%;\n  margin: 0 auto 20px 0;\n  text-align: center;\n  background-color: rgba(72, 72, 72, 0.05);\n  padding: 15px 0;\n  border-radius: 40px;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 10px;\n    opacity: 0.9;\n    background-color: rgba(255, 163, 163, 0.15);\n  }\n  &:active {\n    opacity: 0.6;\n  }\n`;\n\nconst SidebarLabel = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n  color: black;\n`;\n\nconst Icon = styled.img`\n  margin-left: 15px;\n  margin-right: 15px;\n  max-height: 20px;\n`;\n\ninterface Props {}\n\ninterface SidebarOptions {\n  title: string;\n  path?: string;\n  icon?: string;\n}\n\n// TODO: Change extension link to chrome webstore\nconst options: SidebarOptions[] = [\n  {\n    title: 'Links',\n    path: '/links',\n    icon: '/images/link-solid.svg',\n  },\n  {\n    title: 'Friends List',\n    path: '/friends',\n    icon: '/images/user-friends-solid.svg',\n  },\n];\n\nconst Sidebar: React.FC<Props> = (props) => {\n  return (\n    <SidebarContainer>\n      {options.map((option) => (\n        <Link\n          to={option.path || '/'}\n          key={option.title + option.path}\n          style={{ color: 'gray' }}\n        >\n          <SidebarOption>\n            <Icon src={option.icon} />\n            <SidebarLabel>{option.title}</SidebarLabel>\n          </SidebarOption>\n        </Link>\n      ))}\n      <a href=\"mailto:sieger2@illinois.edu?subject=Downloading the Pigeon Extension&amp;body=Joseph will email you the zip file containing the Pigeon extension!\">\n        <SidebarOption>\n          <Icon src=\"/images/download-solid.svg\" />\n          <SidebarLabel>Extension</SidebarLabel>\n        </SidebarOption>\n      </a>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Colors from '../../common/Colors';\nimport auth from '../../api/auth';\n\nconst NavBarContainer = styled.div`\n  background-color: rgba(255, 163, 163, 0.15);\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n`;\n\nconst LogoText = styled.div`\n  display: inline-block;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  margin-left: 2rem;\n  font-size: 1.75rem;\n  line-height: 2rem;\n  white-space: nowrap;\n  color: #181818;\n`;\n\nconst SettingsIcon = styled.img`\n  height: 25px;\n  cursor: pointer;\n  margin-right: 2rem;\n`;\n\nconst MenuContainer = styled.div`\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nconst Menu = styled.div`\n  min-width: 100px;\n  position: absolute;\n  right: 3rem;\n  transform: translateY(-8px);\n  border-radius: 10px;\n`;\n\nconst MenuItem = styled.div`\n  background-color: #eee;\n  color: black;\n  display: block;\n  padding: 12px;\n  text-decoration: none;\n  cursor: pointer;\n  border-radius: 8px;\n\n  &:hover {\n    background-color: #ccc;\n  }\n  &:active {\n    background-color: ${Colors.pink};\n    color: white;\n  }\n`;\n\nconst NavBar = () => {\n  const [showMenu, setShowMenu] = useState(false);\n  return (\n    <>\n      <NavBarContainer>\n        <Link to=\"/\">\n          <LogoText>🐦 Pigeon</LogoText>\n        </Link>\n        <MenuContainer>\n          <SettingsIcon\n            src=\"/images/cog-solid.svg\"\n            onClick={() => {\n              setShowMenu(!showMenu);\n            }}\n          />\n        </MenuContainer>\n      </NavBarContainer>\n      {showMenu && (\n        <Menu>\n          <Link to=\"/\">\n            <MenuItem onClick={() => auth.logout()}> Log out</MenuItem>\n          </Link>\n        </Menu>\n      )}\n    </>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport InstallExtensionModal from '../../modals/InstallExtensionModal';\nimport Sidebar from '../ui/Sidebar';\nimport NavBar from '../ui/NavBar';\n\n// AUTH LOGIC HERE\n\ninterface Props {\n  children: any;\n  installExtensionOpen?: boolean;\n}\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  min-width: 100%;\n  min-height: 100%;\n  opacity: 100%;\n  background-color: white;\n  overflow: scroll;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  height: 600px;\n  max-width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nconst User: React.FC<Props> = ({ children, installExtensionOpen, ...rest }) => {\n  return (\n    <>\n      {installExtensionOpen && <InstallExtensionModal />}\n      <Container>\n        <NavBar />\n        <ContentContainer>\n          <Sidebar />\n          {children}\n        </ContentContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default User;\n","import * as React from 'react';\nimport { ENDPOINT } from '../utils/config';\nimport axios from 'axios';\n\nconst fetchMe = async (accessToken: string): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    axios({\n      url: `${ENDPOINT}/api/users/me`,\n      method: 'GET',\n      timeout: 0,\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((res) => {\n        const me = res.data.data;\n        resolve(me);\n      })\n      .catch((err) => reject(err.response));\n  });\n};\n\nconst fetchMetadata = async (link: string): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    axios({\n      url: `${ENDPOINT}/api/links/preview`,\n      method: 'POST',\n      timeout: 0,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: JSON.stringify({\n        previewUrl: link,\n      }),\n    })\n      .then((response) => {\n        const meta = response.data.data;\n        resolve(meta);\n      })\n      .catch((err) => reject(err.response));\n  });\n};\n\nexport { fetchMe, fetchMetadata };\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport Dashboard from '../components/layouts/Dashboard';\nimport * as API from '../api/linkApi';\nimport { ENDPOINT } from '../utils/config';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Metadata {\n  url?: string;\n  domain?: string;\n  title?: string;\n  img?: string;\n  description?: string;\n  favicon?: string;\n}\n\nconst Body = styled.div`\n  margin: 30px 0 0 50px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst LinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  border-radius: 30px;\n  width: 300px;\n  height: 300px;\n  margin: 0 auto 20px auto;\n  text-align: center;\n  background-color: rgba(72, 72, 72, 0.05);\n  box-shadow: 0px 2px 40px 0px rgba(0, 0, 0, 0.3); /*rgba(0, 0, 0, 0.15) 0px 3px 10px;*/\n  padding: 20px 0;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 10px;\n    opacity: 0.9;\n    background-color: rgba(72, 72, 72, 0.1);\n  }\n  &:active {\n    opacity: 0.6;\n  }\n`;\n\nconst MetaImage = styled.img`\n  height: 100px;\n  border-radius: 15px;\n  margin: 10px auto;\n`;\n\nconst MetaDesc = styled.p`\n  margin: 10px auto;\n  padding: 0 5px;\n  -webkit-line-clamp: 3;\n`;\n\nconst placeholderLinks = [\n  'https://www.google.com/',\n  'https://bleacherreport.com',\n  'https://chelseafc.com',\n  'https://www.cnn.com/',\n  'https://www.nytimes.com/',\n  'https://www.reddit.com/',\n  'https://www.facebook.com/',\n];\n\nconst Links = () => {\n  useEffect(() => {\n    // If page not visited before, show modal\n    const visited = localStorage.getItem('visited');\n    if (!visited) {\n      setRenderModal(true);\n      localStorage.setItem('visited', '1');\n    }\n    const accessTokenData = JSON.parse(\n      localStorage.getItem('pigeonAccessToken') || '{}'\n    );\n\n    const getUserID = async () => {\n      return await API.fetchMe(accessTokenData.accessToken);\n    };\n\n    const parseMetadata = async () => {\n      const previewData: object[] = [];\n      placeholderLinks.map(async (link) => {\n        const meta = await API.fetchMetadata(link);\n        previewData.push(meta);\n      });\n\n      return previewData;\n    };\n\n    /* Experiment to see if await would fix */\n    const retrieveMetadata = async () => {\n      await parseMetadata().then((result) => {\n        setMetadata(result);\n        setFetching(false);\n      });\n    };\n\n    retrieveMetadata();\n\n    getUserID().then((result) => {\n      axios({\n        url: `${ENDPOINT}/api/links/me`,\n        method: 'GET',\n        timeout: 0,\n        headers: {\n          Authorization: `Bearer ${accessTokenData.accessToken}`,\n        },\n        data: JSON.stringify({\n          userID: result.id,\n        }),\n      })\n        .then((response) => {\n          console.log(response.data.links);\n          setLinks(response.data.links);\n        })\n        .catch((err: any) => {\n          if (err && err.response && err.response.data) {\n            const errMessage = err.response.data.message;\n            alert(errMessage);\n          }\n        });\n    });\n  }, []);\n  const [renderModal, setRenderModal] = useState(false);\n  const [links, setLinks] = useState(null); /* Switch to this */\n  const [metadata, setMetadata] = useState<Metadata[] | null>(null);\n  const [fetching, setFetching] = useState(true);\n\n  if (fetching) {\n    return (\n      <Dashboard>\n        <Body>\n          <h1>Your Links are being loaded</h1>\n        </Body>\n      </Dashboard>\n    );\n  }\n\n  return (\n    <Dashboard installExtensionOpen={renderModal}>\n      <Body>\n        <h1\n          style={{\n            marginBottom: '40px',\n          }}\n        >\n          Your Links\n        </h1>\n        {metadata &&\n          metadata.map((data) => (\n            <LinkContainer\n              key={data.url}\n              onClick={() => {\n                if (data.url) {\n                  window.open(data.url);\n                }\n              }}\n            >\n              {data.img && <MetaImage src={data.img} />}\n              {data.url && <a href={data.url}>{data.url}</a>}\n              {data.description && <MetaDesc>{data.description}</MetaDesc>}\n            </LinkContainer>\n          ))}\n      </Body>\n    </Dashboard>\n  );\n};\n\nexport default Links;\n","/** @format */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport Dashboard from '../components/layouts/Dashboard';\n\nconst Body = styled.div`\n  margin: 100px auto 0 auto;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst LinkContainer = styled.div`\n  cursor: pointer;\n  border-radius: 30px;\n  width: 200px;\n  margin: 0 auto 20px auto;\n  text-align: center;\n  background-color: rgba(72, 72, 72, 0.05);\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 10px;\n  padding: 20px 0;\n  border: 2px dashed ${Colors.pink};\n`;\n\nconst AccountSettings = () => {\n  const history = useHistory();\n  return (\n    <Dashboard installExtensionOpen={false}>\n      <Body>\n        <h1>Account Settings</h1>\n        <button\n          type=\"submit\"\n          className=\"ui primary button\"\n          style={{ margin: '15px auto 0 auto' }}\n          onClick={(e) => {\n            history.push('/');\n            // Reset cookie\n          }}\n        >\n          Log out\n        </button>\n      </Body>\n    </Dashboard>\n  );\n};\n\nexport default AccountSettings;\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport Dashboard from '../components/layouts/Dashboard';\nimport * as API from '../api/linkApi';\nimport { ENDPOINT } from '../utils/config';\nimport axios from 'axios';\nimport { Formik } from 'formik';\n\ninterface FormValues {\n  name: string;\n  email: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst ListContainer = styled.div`\n  /*margin: 30px 50px 0 50px;*/\n  margin-top: 30px;\n  padding: 0px 50px;\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst ColumnContainer = styled.div`\n  margin: 0 15px;\n  /* box-shadow: 0px 2px 40px 0px rgba(0, 0, 0, 0.15); */\n`;\n\nconst FriendsListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  border: 1px solid;\n  border-radius: 15px;\n`;\n\nconst FriendName = styled.div`\n  margin: 12px auto;\n  font-size: 20px;\n  font-weight: 500;\n  width: 100%;\n`;\n\nconst RequestContainer = styled.div`\n  display: flex;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  padding-top: 10px;\n`;\n\nconst Option = styled.img`\n  margin-left: 10px;\n  height: 20px;\n  float: left;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst AddContainer = styled.div`\n  /* box-shadow: 0px 2px 40px 0px rgba(0, 0, 0, 0.7); */\n  border-radius: 20px;\n  margin: 40px auto 0px auto;\n`;\n\nconst AddTitle = styled.div`\n  min-height: 1rem;\n  font-size: 2rem;\n  font-weight: 700;\n  text-align: center;\n`;\n\nconst InputField = styled.input`\n  width: 200px;\n  color: black;\n  background-color: #f5f6f8;\n  padding: 7px 16px;\n  font-family: 'Avenir';\n  font-weight: 400;\n  font-size: 14px;\n  border: 3px solid #f5f6f8;\n  margin-top: 20px;\n\n  &::placeholder {\n    color: rgba(0, 0, 0, 0.4);\n  }\n\n  &:focus {\n    outline: none;\n    background: white;\n    border: 3px solid #ff8686;\n    color: black;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px auto 10px auto;\n`;\n\nconst ErrorText = styled.p`\n  font-family: 'Avenir';\n  font-weight: 500;\n  font-size: 14px;\n  color: #8b0000;\n  margin: 5px auto 0 auto;\n`;\n\nconst Friends = () => {\n  useEffect(() => {\n    const accessTokenData = JSON.parse(\n      localStorage.getItem('pigeonAccessToken') || '{}'\n    );\n\n    const getUserID = async () => {\n      return await API.fetchMe(accessTokenData.accessToken);\n    };\n\n    getUserID().then((result) => {\n      axios({\n        url: `${ENDPOINT}/api/friends/current`,\n        method: 'GET',\n        timeout: 0,\n        headers: {\n          Authorization: `Bearer ${accessTokenData.accessToken}`,\n        },\n        data: JSON.stringify({\n          userID: result.id,\n        }),\n      })\n        .then((response) => {\n          setFriends(response.data.data);\n        })\n        .catch((err: any) => {\n          if (err && err.response && err.response.data) {\n            const errMessage = err.response.data.message;\n            alert(errMessage);\n          }\n        });\n    });\n  }, []);\n\n  const initialValues: FormValues = {\n    name: '',\n    email: '',\n  };\n\n  const [friends, setFriends] = useState(null);\n  const placeholderFriends = [\n    'Jane Doe',\n    'Ferris Bueller',\n    'Forest Gump',\n    'Nemo TheFish',\n  ];\n\n  const placeholderRequests = [\n    'Brad Pitt',\n    'Jennifer Lawrence',\n    'Alex Trebek',\n    'Lebron James',\n  ];\n\n  const validateSignUp = (values: FormValues) => {\n    const errors = {} as any;\n    if (!values.email) {\n      errors.email = 'Email address required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!values.name) {\n      errors.name = 'Name is required';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = (\n    values: FormValues,\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n  ) => {\n    const requiredValues = {\n      email: values.email,\n    };\n    /* Add in endpoint call */\n  };\n\n  return (\n    <Dashboard>\n      <Container>\n        <ListContainer>\n          <ColumnContainer>\n            <h1>Your Friends</h1>\n            <FriendsListContainer>\n              {placeholderFriends.map((friend) => (\n                <FriendName key={friend}>{friend}</FriendName>\n              ))}\n            </FriendsListContainer>\n          </ColumnContainer>\n          <ColumnContainer>\n            <h1>Pending Requests</h1>\n            <FriendsListContainer>\n              {placeholderRequests.map((request) => (\n                <RequestContainer key={request}>\n                  <OptionsContainer>\n                    <Option src=\"/images/thumbs-up-solid.svg\" />\n                    <Option\n                      src=\"/images/thumbs-down-solid.svg\"\n                      style={{\n                        marginTop: '4px',\n                      }}\n                    />\n                  </OptionsContainer>\n                  <FriendName\n                    style={{\n                      marginLeft: '10px',\n                      paddingRight: '10px',\n                    }}\n                  >\n                    {request}\n                  </FriendName>\n                </RequestContainer>\n              ))}\n            </FriendsListContainer>\n          </ColumnContainer>\n        </ListContainer>\n        <AddContainer>\n          <AddTitle>Add Friends</AddTitle>\n          <Formik\n            initialValues={initialValues}\n            validate={validateSignUp}\n            onSubmit={handleSubmit}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              resetForm,\n            }: /* and other goodies */\n            {\n              values: any;\n              errors: any;\n              touched: any;\n              handleChange: {\n                (e: React.ChangeEvent<any>): void;\n              };\n              handleBlur: {\n                (e: React.ChangeEvent<any>): void;\n              };\n              handleSubmit: {\n                (e: React.ChangeEvent<any>): void;\n              };\n              isSubmitting: boolean;\n              resetForm: {\n                (): void;\n              };\n            }) => (\n              <>\n                <FormContainer onSubmit={handleSubmit}>\n                  <InputField\n                    type=\"text\"\n                    name=\"name\"\n                    value={values.name}\n                    placeholder=\"Jane Doe\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  {errors.name && touched.name && (\n                    <ErrorText>{errors.name}</ErrorText>\n                  )}\n                  <InputField\n                    type=\"text\"\n                    name=\"email\"\n                    value={values.email}\n                    placeholder=\"janedoe@gmail.com\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  {errors.email && touched.email && (\n                    <ErrorText>{errors.email}</ErrorText>\n                  )}\n\n                  <ButtonContainer>\n                    <button\n                      type=\"submit\"\n                      className=\"ui primary button\"\n                      style={{\n                        margin: '15px auto 0 auto',\n                        backgroundColor: 'green',\n                      }}\n                      onClick={(e) => {\n                        handleSubmit(e);\n                      }}\n                    >\n                      Save\n                    </button>\n                  </ButtonContainer>\n                  <ButtonContainer>\n                    <button\n                      type=\"submit\"\n                      className=\"ui primary button\"\n                      style={{\n                        margin: '15px auto 0 auto',\n                        backgroundColor: 'rgba(72,72,72,0.7)',\n                      }}\n                      onClick={() => {\n                        resetForm();\n                      }}\n                    >\n                      Add another friend!\n                    </button>\n                  </ButtonContainer>\n                  <ButtonContainer\n                    style={{\n                      marginTop: '30px',\n                    }}\n                  >\n                    <button\n                      type=\"submit\"\n                      className=\"ui primary button\"\n                      style={{ margin: '15px auto 0 auto' }}\n                      onClick={() => {}}\n                    >\n                      Continue\n                    </button>\n                  </ButtonContainer>\n                </FormContainer>\n              </>\n            )}\n          </Formik>\n        </AddContainer>\n      </Container>\n    </Dashboard>\n  );\n};\n\nexport default Friends;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Colors from '../common/Colors';\nimport Header from '../components/ui/Header';\nimport auth from '../api/auth';\n\n// TICKETS: Add loading animation to button. Validate email on landing page?\n\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\nconst Headline = styled.h1`\n  padding-top: 7%;\n  font-family: 'Avenir';\n  font-size: 33px;\n  text-align: center;\n  color: white;\n  margin-block-end: 0em;\n`;\n\nconst Background = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  min-width: 100%;\n  min-height: 100%;\n  opacity: 100%;\n  background-color: ${Colors.pink};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst InputField = styled.input`\n  width: 200px;\n  border-radius: 12px;\n  color: black;\n  background-color: #f5f6f8;\n  padding: 8px 16px;\n  font-family: 'Avenir';\n  font-weight: 400;\n  font-size: 14px;\n  border: 3px solid #f5f6f8;\n  margin: auto;\n  margin-top: 20px;\n\n  &::placeholder {\n    color: rgba(0, 0, 0, 0.4);\n  }\n\n  &:focus {\n    outline: none;\n    background: white;\n    border: 3px solid #ddd;\n    color: black;\n  }\n`;\n\nconst ErrorText = styled.p`\n  font-family: 'Avenir';\n  font-weight: 500;\n  font-size: 14px;\n  color: #8b0000;\n  margin: 5px auto 0 auto;\n`;\n\nconst Login = () => {\n  const history = useHistory();\n\n  const initialValues: FormValues = {\n    email: '',\n    password: '',\n  };\n\n  const validateSignUp = (values: FormValues) => {\n    const errors = {} as any;\n    if (!values.email) {\n      errors.email = 'Email address required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!values.password) {\n      errors.password = 'Password is required';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = (values: FormValues) => {\n    auth.login(values);\n  };\n\n  const loginComplete = ({ error }: { error?: string }) => {\n    if (!error) {\n      history.push('/links');\n    } else {\n      alert(error);\n      console.error(error);\n    }\n  };\n\n  auth.addLoginSubscribers(loginComplete);\n\n  return (\n    <Background>\n      <Header color={'white'} />\n      <>\n        <Headline>Welcome Back</Headline>\n        <Formik\n          initialValues={initialValues}\n          validate={validateSignUp}\n          onSubmit={handleSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }: /* and other goodies */\n          {\n            values: any;\n            errors: any;\n            touched: any;\n            handleChange: {\n              (e: React.ChangeEvent<any>): void;\n            };\n            handleBlur: {\n              (e: React.ChangeEvent<any>): void;\n            };\n            handleSubmit: {\n              (e: React.ChangeEvent<any>): void;\n            };\n            isSubmitting: boolean;\n          }) => (\n            <>\n              <FormContainer onSubmit={handleSubmit}>\n                <InputField\n                  type=\"text\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"janedoe@gmail.com\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.email && touched.email && (\n                  <ErrorText>{errors.email}</ErrorText>\n                )}\n                <InputField\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.password && touched.password && (\n                  <ErrorText>{errors.password}</ErrorText>\n                )}\n                <ButtonContainer>\n                  <button\n                    type=\"submit\"\n                    className=\"button is-info\"\n                    style={{ margin: '15px auto 0 auto' }}\n                    onClick={(e) => {\n                      handleSubmit(e);\n                    }}\n                  >\n                    Get Started\n                  </button>\n                </ButtonContainer>\n              </FormContainer>\n            </>\n          )}\n        </Formik>\n      </>\n    </Background>\n  );\n};\n\nexport default Login;\n","/** @format */\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../api/auth';\n\nconst PublicRoute: React.FC<{\n  component: React.FC;\n  path: string;\n  exact: boolean;\n}> = (props) => {\n  const condition = auth.isAuthenticated();\n\n  return condition ? (\n    <Redirect to=\"/links\" />\n  ) : (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  );\n};\nexport default PublicRoute;\n","/** @format */\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../api/auth';\n\nconst PrivateRoute: React.FC<{\n  component: React.FC;\n  path: string;\n  exact: boolean;\n}> = (props) => {\n  const condition = auth.isAuthenticated();\n\n  return condition ? (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n};\nexport default PrivateRoute;\n","/** @format */\n\nimport React from 'react';\nimport Main from './Main';\nimport Signup from './Signup';\nimport AddFriends from './onboarding/AddFriends';\nimport Links from './Links';\nimport AccountSettings from './AccountSettings';\nimport FriendsList from './FriendsList';\nimport Login from './Login';\nimport PublicRoute from '../components/routes/PublicRoute';\nimport PrivateRoute from '../components/routes/PrivateRoute';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute exact path=\"/\" component={Main} />\n        <PublicRoute exact path=\"/signup\" component={Signup} />\n        <PublicRoute exact path=\"/login\" component={Login} />\n        {/* <PrivateRoute exact path=\"/onboarding\" component={AddFriends} /> */}\n        <PrivateRoute exact path=\"/links\" component={Links} />\n        <PrivateRoute exact path=\"/account\" component={AccountSettings} />\n        <PrivateRoute exact path=\"/friends\" component={FriendsList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./pages/AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}